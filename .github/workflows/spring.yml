name: Deploy Spring Boot to EC2

on:
  push:
    branches:
      - main

jobs:
  ci:
    name: Build JAR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build JAR with Maven
        run: |
          mvn clean package
          mvn clean install
          ls -lah target/  # Verify JAR exists
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-jar
          path: target/demo-0.0.1-SNAPSHOT.jar
          
  cd:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: ci  # CD job depends on CI job

    steps:
      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-jar
          path: target/
          
      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "target/demo-0.0.1-SNAPSHOT.jar"
          target: "/home/ubuntu/app/"
          overwrite: true

      - name: Run JAR on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Ensure target directory exists
            sudo mkdir -p /home/ubuntu/app/
            
            # Give execution permissions
            sudo chmod +x /home/ubuntu/app/target/demo-0.0.1-SNAPSHOT.jar
            
            # Run the JAR file
            nohup sudo java -jar /home/ubuntu/app/target/demo-0.0.1-SNAPSHOT.jar --server.port=80 > /home/ubuntu/app/app.log 2>&1 &
            
            # Wait for the app to start
            sleep 15

            # Check if the application is running
            curl -I http://localhost:80 || sudo journalctl -u demo-0.0.1-SNAPSHOT --no-pager | tail -n 20
